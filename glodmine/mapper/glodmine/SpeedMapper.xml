<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doadway.glodmine.core.dao.SpeedMapper">
  <resultMap id="BaseResultMap" type="com.doadway.glodmine.core.model.Speed">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="idate" jdbcType="TIMESTAMP" property="idate" />
    <result column="isource" jdbcType="INTEGER" property="isource" />
    <result property="icategory"  jdbcType="VARCHAR"  column="icategory"></result>  
    <result column="imoney" jdbcType="REAL" property="imoney" />
    <result column="imemo" jdbcType="VARCHAR" property="imemo" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, idate, isource, imoney, imemo, member_id
  </sql>
  <select id="selectByExample" parameterType="com.doadway.glodmine.core.model.SpeedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from speed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectSpeedByPage" resultMap="BaseResultMap">
    select
    	speed.id, speed.idate, speed.isource, speed.imoney, speed.imemo ,speed.member_id ,speed_type.icategory
    from speed left join speed_type  on speed.isource=speed_type.id
 	where 1=1 
 	<if test="params.startTime!=null"> 
	 		<![CDATA[
		 		and speed.idate >= 
			 ]]> #{params.startTime}
 	</if> 
 	 <if test="params.endTime!=null">
	 		 <![CDATA[
		 		and speed.idate <= 
		 	  ]]> #{params.endTime} 
 	</if>  
 	 <if test="params.categoryId!=null">
	 	and speed.isource=#{params.categoryId}
 	</if> 	
 	 <if test="params.memberId!=null">
	 	and speed.member_id=#{params.memberId}
 	</if> 	
 	 order by speed.idate desc 
 </select> 
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    	speed.id, speed.idate, speed.isource, speed.imoney, speed.imemo ,speed_type.icategory
    from speed left join speed_type  on speed.isource=speed_type.id
    where speed.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="countSpeedByDate" resultMap="BaseResultMap">
		SELECT
			speed.isource, 
			speed.member_id,
			Sum(speed.imoney) AS imoney,
			speed_type.icategory
		FROM
			speed ,
			speed_type
		WHERE
		speed.isource = speed_type.id
	 	<if test="params.startTime!=null"> 
		 		<![CDATA[
			 		and speed.idate >= 
				 ]]> #{params.startTime}
	 	</if> 
	 	 <if test="params.endTime!=null">
		 		 <![CDATA[
			 		and speed.idate <= 
			 	  ]]> #{params.endTime} 
	 	</if>  
	 	<if test="params.memberId!=null">
		 	and speed.member_id=#{params.memberId}
		 	and speed_type.member_id=#{params.memberId}
	 	</if> 	
		GROUP BY
		speed.isource
	 	order by speed.idate desc 
 	</select>
 	  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from speed
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.doadway.glodmine.core.model.SpeedExample">
    delete from speed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.doadway.glodmine.core.model.Speed">
    insert into speed (id, idate, isource, 
      imoney, imemo, member_id
      )
    values (#{id,jdbcType=INTEGER}, #{idate,jdbcType=TIMESTAMP}, #{isource,jdbcType=INTEGER}, 
      #{imoney,jdbcType=REAL}, #{imemo,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.doadway.glodmine.core.model.Speed">
    insert into speed
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="idate != null">
        idate,
      </if>
      <if test="isource != null">
        isource,
      </if>
      <if test="imoney != null">
        imoney,
      </if>
      <if test="imemo != null">
        imemo,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="idate != null">
        #{idate,jdbcType=TIMESTAMP},
      </if>
      <if test="isource != null">
        #{isource,jdbcType=INTEGER},
      </if>
      <if test="imoney != null">
        #{imoney,jdbcType=REAL},
      </if>
      <if test="imemo != null">
        #{imemo,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.doadway.glodmine.core.model.SpeedExample" resultType="java.lang.Integer">
    select count(*) from speed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update speed
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.idate != null">
        idate = #{record.idate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isource != null">
        isource = #{record.isource,jdbcType=INTEGER},
      </if>
      <if test="record.imoney != null">
        imoney = #{record.imoney,jdbcType=REAL},
      </if>
      <if test="record.imemo != null">
        imemo = #{record.imemo,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update speed
    set id = #{record.id,jdbcType=INTEGER},
      idate = #{record.idate,jdbcType=TIMESTAMP},
      isource = #{record.isource,jdbcType=INTEGER},
      imoney = #{record.imoney,jdbcType=REAL},
      imemo = #{record.imemo,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.doadway.glodmine.core.model.Speed">
    update speed
    <set>
      <if test="idate != null">
        idate = #{idate,jdbcType=TIMESTAMP},
      </if>
      <if test="isource != null">
        isource = #{isource,jdbcType=INTEGER},
      </if>
      <if test="imoney != null">
        imoney = #{imoney,jdbcType=REAL},
      </if>
      <if test="imemo != null">
        imemo = #{imemo,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doadway.glodmine.core.model.Speed">
    update speed
    set idate = #{idate,jdbcType=TIMESTAMP},
      isource = #{isource,jdbcType=INTEGER},
      imoney = #{imoney,jdbcType=REAL},
      imemo = #{imemo,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>